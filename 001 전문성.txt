프론트 엔드
1. HTML & CSS3
2. JavaScript & Jquery

3. 부트스트랩
4. vie.js

백엔드
1. PHP & MySQL & MariaDB
2. Linux
3. Network

4. JAVA
 4-1. JSP
 4-2. SPRING
   :DI(Dependency Injection) - 각각의 계층이나 서비스들 간에 의존성이 존재할 경우 프레임워크가 서로 연결시켜준다.
   :IOC(Inversion Of Control) - 컨트롤의 제어권이 사용자가 아니라 프레임워크에 있어서 필요에 따라 스프링에서 사용자의 코드를 호출한다.
   :IOC컨테이너 - 어떠한 객체의 명세서를 작성하고, 스프링 라이브러리는 해당 명세서대로 객체를 생성. 생성된 객체(그리고 디펜던시)들을 보관하는 공간을 의미.
   :AOP(Aspect Of Programming) - 핵심적인 기능에서 부가적인 기능을 분리하여 애스팩트라는 독특한 모듈로 만들어서 설계하고 개발하는 방법.
   :AOP프록시 - XML과 Annotaion을 통해서 구현할 수 있음
     프록시(Proxy) - 클라이언트가 사용하려고 하는 실제 대상인 것처럼 위장하여 클라이언트의 요청을 받아주어 처리하는 대리자 역할
     목적: 클라이언트가 타깃에 접근하는 방법을 제어, 타깃에 부가적인 기능을 부여
   :패턴(Patterns)
     데코레이션 패턴:
     프록시 패턴:
5. Git
6. OracleDB
7. Node.js
8. 랭귤러.js

스펙관리
1. 정보처리
2. 정보보안

test